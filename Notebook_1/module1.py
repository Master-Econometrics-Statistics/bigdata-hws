# -*- coding: utf-8 -*-
"""module1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uGNxw_qJVri0Fi5ajTbGI9L75bdpamY9
"""

class Rectangle: 
    
    def __init__(self, length, width, coordx1, coordy1,):
        self.length = length
        self.width = width
        self.coordx1 = coordx1
        self.coordy1 = coordy1

    def rectangle_area(self):
        return self.length * self.width

    def rectangle_perimeter(self):
        return self.length * 2 + self.width * 2

    def rectangle_patches(self):
        return matplotlib.patches.Rectangle((self.coordx1, self.coordy1),
                                     self.length, self.width)

class Patch :

    def __init__(self, length, width, coordx1, coordy1):

        self.length = length
        self.width = width
        self.coordx1 = coordx1
        self.coordy1 = coordy1

    def get_patches(self):

      rect = Rectangle(self.length, self.width, self.coordx1, self.coordy1).rectangle_patches()
      
      ax.add_patch(rect)

      coords = []

      for i in range(self.width): 
        for j in range(self.length):
          coords.append(np.array([[r1.get_x()+j, r1.get_y()+i]]))
      
      return coords